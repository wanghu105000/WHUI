<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        yI0cDd/96n9mvogw6YYhxAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="whButton1.MyImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>